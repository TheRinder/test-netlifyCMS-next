name: Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: npm install

    - name: Build application
      run: npm run build
    
    - name: Cache node_modules
      uses: actions/cache@v2
      with:
        path: node_modules
        key: node_modules-${{github.run_id}}
    
    - name: Cache .next
      uses: actions/cache@v2
      with:
        path: .next
        key: next-${{github.run_id}}

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install SSH Key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SSH_PRIVATE_KEY }} 
        known_hosts: 'unnecessary'
    
    - name: Adding Known Hosts
      run: ssh-keyscan -H ${{ secrets.REMOTE_HOST }}  >> ~/.ssh/known_hosts
  
    - name: Install rsync
      run: sudo apt-get install -y rsync
    
    - name: Cache node_modules
      uses: actions/cache@v2
      with:
        path: node_modules
        key: node_modules-${{github.run_id}}
    
    - name: Cache .next
      uses: actions/cache@v2
      with:
        path: .next
        key: next-${{github.run_id}}
    
    - name: Setup rsync  
      run: rsync -avz --exclude=.github --exclude=.git -e "ssh -v" ${GITHUB_WORKSPACE} ${{secrets.USER}}@${{secrets.REMOTE_HOST}}:/home/${{secrets.USER}}/projects/

    - name: Login to remote server and reload app
      run: ssh ${{secrets.USER}}@${{secrets.REMOTE_HOST}} "cd projects/circons && pm2 reload ecosystem.config.js"
  
  cleanup-runner-cache:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Cleanup
        run: |
          gh extension install actions/gh-actions-cache
          
          REPO=${{ github.repository }}
          BRANCH=${{ github.ref }}

          echo "Fetching list of cache key"
          cacheKeysForPR=$(gh actions-cache list -R $REPO -B $BRANCH | cut -f 1 )

          ## Setting this to not fail the workflow while deleting cache keys. 
          set +e
          echo "Deleting caches..."
          for cacheKey in $cacheKeysForPR
          do
              gh actions-cache delete $cacheKey -R $REPO -B $BRANCH --confirm
          done
          echo "Done"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
